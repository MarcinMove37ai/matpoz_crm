server {
    listen 80;  # Dodane nasłuchiwanie na porcie 80
    listen 8000;
    server_name crm.move37th.ai;

    root /usr/share/nginx/html;
    index index.html;

    #################################################################
    # 1. Health Check Endpoint – zawsze zwraca 200 bez przekierowania
    #################################################################
    location /health {
        add_header Content-Type text/plain;
        return 200 'OK';
    }

    #########################################################
    # 2. Brak przekierowań na HTTPS – usunięto reguły if !
    #########################################################
    # (Nie ma żadnego warunku przekierowującego ruch do HTTPS)

    #########################################################
    # 3. Globalne nagłówki proxy (mogą być użyte w location /api/)
    #########################################################
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;

    #########################################################
    # 4. Obsługa plików statycznych oraz routingu Next.js
    #########################################################
    location / {
        try_files $uri $uri.html $uri/ /index.html;
        add_header Cache-Control "no-cache";
    }

    #########################################################
    # 5. Szczególna konfiguracja dla problematycznego endpointu map
    #########################################################
    location = /api/clients/map {
        proxy_pass http://app-lb-1176488264.eu-central-1.elb.amazonaws.com:8000/api/clients/map;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host app-lb-1176488264.eu-central-1.elb.amazonaws.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Obsługa zapytań preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    #########################################################
    # 6. Proxy dla API – wszystkie żądania /api/ kierujemy do backendu
    #    za pomocą HTTP na porcie 8000.
    #########################################################
    location /api/ {
        proxy_pass http://app-lb-1176488264.eu-central-1.elb.amazonaws.com:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        # Ustawiamy nagłówek Host, aby backend widział oczekiwany adres
        proxy_set_header Host app-lb-1176488264.eu-central-1.elb.amazonaws.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Obsługa zapytań preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    #########################################################
    # 7. Obsługa błędów – przekierowanie na index.html
    #########################################################
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
}